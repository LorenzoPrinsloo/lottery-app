# --- WORKFLOW ---
# 1. Build the application's Docker image from the terminal:
#    sbt Docker/publishLocal
#
# 2. Start all services defined in this file:
#    docker-compose up
#
# 3. To stop the services:
#    Ctrl+C in the terminal, then `docker-compose down`

version: '3.8'

services:
  # 1. Nginx Load Balancer
  nginx:
    image: nginx:1.25-alpine
    container_name: lottery-load-balancer
    ports:
      # Map port 8080 on your host to port 80 in the Nginx container.
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - lottery-api
      - lottery-draw

  # 2. Lottery API Service
  lottery-api:
    image: lottery-service:1.0.0
    platform: linux/amd64
    environment:
      - REDIS_URI=redis://redis:6379
      - SERVER_HOST=0.0.0.0
    depends_on:
      - redis

  # 3. The Lottery Draw Service (runs as a cron)
  lottery-draw:
    image: draw-service:1.0.0
    platform: linux/amd64
    environment:
      - REDIS_URI=redis://redis:6379
      - SERVER_HOST=0.0.0.0
      - API_SECRET=3afb9eb305e2f961a0cdcb0c874c69f4
      - TIME_ZONE=Europe/Amsterdam
      - DRAW_TIME=10:33
      - DAY_OFFSET=0
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
    depends_on:
      - redis
      - mailhog

  # 4. Redis DB
  redis:
    image: redis:7-alpine
    container_name: lottery-redis
    ports:
      - "6379:6379"
    # enable AOF persistence.
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # 5. The MailHog Email Catcher
  mailhog:
    image: mailhog/mailhog
    platform: linux/amd64

volumes:
  redis_data: